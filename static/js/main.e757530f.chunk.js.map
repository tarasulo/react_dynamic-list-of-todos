{"version":3,"sources":["component/User.js","component/Todoitem.js","component/Todolist.js","App.js","index.js"],"names":["User","props","react_default","a","createElement","user","name","email","TodoItem","className","type","checked","todo","completed","title","component_User","TodoList","todos","map","Todoitem","getTodos","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","responce","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","arguments","getUsers","_ref2","_callee2","_context2","todosFromServer","App","state","isLoaded","isLoading","handleClick","_this","setState","setTimeout","users","objectSpread","find","id","userId","Todolist","onClick","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"+PAyBeA,SAtBF,SAAAC,GAAK,OAChBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACGH,EAAMI,KAAKC,MAEdJ,EAAAC,EAAAC,cAAA,qBAEGH,EAAMI,KAAKE,UCeHC,EArBE,SAAAP,GAAK,OACpBC,EAAAC,EAAAC,cAAA,WAASK,UAAU,QACjBP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOM,KAAK,WAAWC,QAASV,EAAMW,KAAKC,YAC1CZ,EAAMW,KAAKE,OAEdZ,EAAAC,EAAAC,cAACW,EAAD,CAAMV,KAAMJ,EAAMW,KAAKP,SCMZW,EAZE,SAAAf,GAAK,OACpBC,EAAAC,EAAAC,cAAA,WACGH,EAAMgB,MAAMC,IAAI,SAAAN,GAAI,OACnBV,EAAAC,EAAAC,cAACe,EAAD,CAAUP,KAAMA,QCHhBQ,EAAQ,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAArB,EAAAsB,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAArB,EAAAyB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACQC,MAAM,8CADd,cACTL,EADSE,EAAAI,KAAAJ,EAAAE,KAAA,EAEFJ,EAASO,OAFP,cAAAL,EAAAM,OAAA,SAAAN,EAAAI,MAAA,wBAAAJ,EAAAO,SAAAV,MAAH,yBAAAL,EAAAgB,MAAAC,KAAAC,YAAA,GAKRC,EAAQ,eAAAC,EAAAnB,OAAAC,EAAA,EAAAD,CAAAE,EAAArB,EAAAsB,KAAG,SAAAiB,IAAA,IAAAf,EAAA,OAAAH,EAAArB,EAAAyB,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACQC,MAAM,8CADd,cACTL,EADSgB,EAAAV,KAAAU,EAAAZ,KAAA,EAEFJ,EAASO,OAFP,cAAAS,EAAAR,OAAA,SAAAQ,EAAAV,MAAA,wBAAAU,EAAAP,SAAAM,MAAH,yBAAAD,EAAAJ,MAAAC,KAAAC,YAAA,GAKVK,EAAkB,GAkDPC,6MA/CbC,MAAQ,CACN7B,MAAO,GACP8B,UAAU,EACVC,WAAW,KAYbC,YAAc,WACZC,EAAKC,SAAS,CACZH,WAAW,IAGbI,WAAW,WACTF,EAAKC,SAAS,CACZlC,MAAO2B,EACPG,UAAU,EACVC,WAAW,KAEZ,yNAnBiB5B,kBAAdH,kBACcuB,WAAda,SACNT,EAAkB3B,EAAMC,IAAI,SAAAN,GAAI,OAAAU,OAAAgC,EAAA,EAAAhC,CAAA,GAC3BV,EAD2B,CAE9BP,KAAMgD,EAAME,KAAK,SAAAlD,GAAI,OAAIA,EAAKmD,KAAO5C,EAAK6C,2IAmB5C,OACEvD,EAAAC,EAAAC,cAAA,YACIkC,KAAKQ,MAAMC,SACX7C,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAACsD,EAAD,CAAUzC,MAAOqB,KAAKQ,MAAM7B,SAG9Bf,EAAAC,EAAAC,cAAA,UAAQK,UAAU,OAAOkD,QAASrB,KAAKW,aACpCX,KAAKQ,MAAME,UAAY,aAAe,gBAxCjCY,IAAMC,WCZxBC,IAASC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.e757530f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = props => (\n  <div>\n    <p>\n      {props.user.name}\n    </p>\n    <p>\n      contact :\n      {props.user.email}\n    </p>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      email: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = props => (\n  <section className=\"Todo\">\n    <div>\n      <input type=\"checkbox\" checked={props.todo.completed} />\n      {props.todo.title}\n    </div>\n    <User user={props.todo.user} />\n  </section>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      userId: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    })\n  ).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './Todoitem';\n\nconst TodoList = props => (\n  <div>\n    {props.todos.map(todo => (\n      <TodoItem todo={todo} />\n    ))}\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './component/Todolist';\n\nconst getTodos = async() => {\n  const responce = await fetch('https://jsonplaceholder.typicode.com/todos');\n  return await responce.json();\n};\n\nconst getUsers = async() => {\n  const responce = await fetch('https://jsonplaceholder.typicode.com/users');\n  return await responce.json();\n};\n\nlet todosFromServer = [];\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    isLoaded: false,\n    isLoading: false,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n    const users = await getUsers();\n    todosFromServer = todos.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }));\n  }\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        todos: todosFromServer,\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 2000);\n  };\n\n  render() {\n    return (\n      <main>\n        { this.state.isLoaded ? (\n          <div className=\"App\">\n            <h1>Dynamic list of todos</h1>\n            <TodoList todos={this.state.todos} />\n          </div>\n        ) : (\n          <button className=\"load\" onClick={this.handleClick}>\n            {this.state.isLoading ? 'Loading...' : 'Load' }\n          </button>\n        )}\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}