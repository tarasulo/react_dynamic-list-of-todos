{"version":3,"sources":["component/User.js","component/Todoitem.js","component/Todolist.js","component/getSort.js","App.js","index.js"],"names":["User","props","react_default","a","createElement","user","name","TodoItem","className","todo","id","component_User","type","checked","completed","title","TodoList","_ref","todos","map","Todoitem","key","getSort","sortField","arguments","length","undefined","Object","toConsumableArray","reverse","callback","b","localeCompare","sort","getTodos","asyncToGenerator","regenerator_default","mark","_callee","responce","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","this","getUsers","_ref2","_callee2","_context2","todosFromServer","App","state","visibleTodos","isLoaded","isLoading","sortBy","_this","setState","prevState","handleClick","setTimeout","users","objectSpread","find","userId","_this2","onClick","Todolist","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.64bba0e5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = props => (\n  <div>\n    {props.user.name}\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = props => (\n  <tr className=\"Todo\">\n    <td>\n      {props.todo.id}\n    </td>\n    <td>\n      <User user={props.todo.user} />\n    </td>\n    <td>\n      <input type=\"checkbox\" checked={props.todo.completed} />\n    </td>\n    <td>\n      {props.todo.title}\n    </td>\n  </tr>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      userId: PropTypes.number,\n      title: PropTypes.string,\n      completed: PropTypes.bool,\n    })\n  ).isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './Todoitem';\n\nconst TodoList = ({ todos }) => (\n  <table>\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>USER</th>\n        <th>DONE</th>\n        <th>TASK</th>\n      </tr>\n    </thead>\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem todo={todo} key={todo.id} />\n      ))}\n    </tbody>\n  </table>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TodoList;\n","const getSort = (todos, sortField, isTheSame = false) => {\n  if (isTheSame) {\n    return [...todos].reverse();\n  }\n\n  const callbackSort = {\n    id: (a, b) => a.id - b.id,\n    title: (a, b) => a.title.localeCompare(b.title),\n    completed: (a, b) => a.completed - b.completed,\n    user: (a, b) => a.user.name.localeCompare(b.user.name),\n  };\n\n  const callback = callbackSort[sortField];\n\n  return [...todos].sort(callback);\n};\n\nexport default getSort;\n","import React from 'react';\nimport './App.css';\nimport TodoList from './component/Todolist';\nimport getSort from './component/getSort';\n\nconst getTodos = async() => {\n  const responce = await fetch('https://jsonplaceholder.typicode.com/todos');\n  return await responce.json();\n};\n\nconst getUsers = async() => {\n  const responce = await fetch('https://jsonplaceholder.typicode.com/users');\n  return await responce.json();\n};\n\nlet todosFromServer = [];\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    visibleTodos: [],\n    isLoaded: false,\n    isLoading: false,\n    sortField: ''\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n    const users = await getUsers();\n    todosFromServer = todos.map(todo => ({\n      ...todo,\n      user: users.find(user => user.id === todo.userId),\n    }))\n  }\n\n  sortBy = (sortField) => {\n\n    this.setState(prevState => {\n      return {\n        visibleTodos: getSort(prevState.visibleTodos, sortField, prevState.sortField === sortField),\n        sortField,\n      };\n    });\n  }\n\n  handleClick = () => {\n    this.setState({\n      isLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        todos: todosFromServer,\n        visibleTodos: todosFromServer,\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 1000);\n  }\n\n  render() {\n    const {visibleTodos} = this.state;\n    return (\n      <main>\n        {this.state.isLoaded ? (\n          <div className=\"App\">\n            <h1>Dynamic list of todos</h1>\n            <h3> try to sort {this.state.sortField}</h3>\n            <button onClick={() => this.sortBy('id')}>ID</button>\n            <button onClick={() => this.sortBy('user')}>USER</button>\n            <button onClick={() => this.sortBy('completed')}>DONE</button>\n            <button onClick={() => this.sortBy('title')}>TASK</button>\n            <TodoList todos={visibleTodos} />\n          </div>\n        ) : (\n          <button className=\"load\" onClick={this.handleClick}>\n            {this.state.isLoading ? 'Loading...' : 'Load' }\n          </button>\n        )}\n      </main>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}